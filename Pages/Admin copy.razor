@* @page "/admin"
@using MultiStepInputPage.Models
@inject HttpClient HttpClient

<h3>관리자 페이지</h3>

<button class="btn btn-primary" style="float: right;" @onclick="SaveToDatabase">저장</button>

@if (isLoading)
{
    <p>로딩 중...</p>
}
else if (formDataList == null)
{
    <p>데이터를 불러오는 데 실패했습니다.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>부스 번호</th>
                <th>Beacon ID</th>
                <th>회사명</th>
                <th>제목</th>
                <th>설명</th>
                <th>제품 이미지</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var formData in formDataList)
            {
                <tr>
                    <td>@formData.Id</td>
                    <td>@formData.BoothNumber</td>
                    <td>@formData.BeaconId</td>
                    <td>@formData.CompanyName</td>
                    <td>@formData.Title</td>
                    <td>@formData.Description</td>
                    <td>@formData.ProductImageUrl</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<FormData> formDataList;
    private string apiUrl = "http://chicline-beauty.com/api/getAllData.php";
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await FetchDataFromApi();
    }

    private async Task SaveToDatabase()
    {
        // 여기에 저장 로직을 구현하세요
        await FetchDataFromApi();
    }

    private async Task FetchDataFromApi()
    {
        try
        {
            isLoading = true;
            StateHasChanged();

            var response = await HttpClient.GetAsync(apiUrl);
            var content = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"API 응답: {content}"); // 디버깅용 로그

            if (response.IsSuccessStatusCode)
            {
                if (!string.IsNullOrWhiteSpace(content))
                {
                    formDataList = System.Text.Json.JsonSerializer.Deserialize<List<FormData>>(content);
                }
                else
                {
                    Console.WriteLine("API 응답이 비어 있습니다.");
                    formDataList = new List<FormData>();
                }
            }
            else
            {
                Console.WriteLine($"API 호출 실패: {response.StatusCode}");
                formDataList = null;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"오류: {ex.Message}");
            formDataList = null;
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
}

<style>
    .table {
        width: 100%;
        border-collapse: collapse;
    }
    .table th, .table td {
        border: 1px solid #ddd;
        padding: 8px;
        text-align: left;
    }
    .table th {
        background-color: #f2f2f2;
    }
</style> *@