@inject BoothStateService BoothState

@code {
    [Parameter]
    public EventCallback OnNext { get; set; }
    [Parameter]
    public EventCallback OnPrevious { get; set; }

    private void GoNext()
    {
        if (OnNext.HasDelegate)
        {
            SaveStep3Data();
            OnNext.InvokeAsync();
        }
    }

    private void GoPrevious()
    {
        if (OnPrevious.HasDelegate)
        {
            OnPrevious.InvokeAsync();
        }
    }

    private string? description; // description 변수를 추가하여 입력값을 저장

    private void SaveStep3Data()
    {
        BoothState.Step3Data = description; // 입력받은 description 값을 BoothState에 저장
    }
}

<h4>Step 2: Description</h4>
<div class="input-container">
    <input type="text" @bind="description" class="form-control" />
</div>
<div class="button-container">
    <button class="btn btn-primary" @onclick="GoPrevious">Prev</button>
    <button class="btn btn-primary" @onclick="GoNext">Next</button>
</div>

<style>
    .step-container {
        background-color: #34495e;
        padding: 20px;
        border-radius: 8px;
        width: 100%;
        max-width: 400px;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        width: 100%;
        padding: 8px;
        border: none;
        border-radius: 4px;
        background-color: #ecf0f1;
        color: #2c3e50;
    }

    .btn {
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-weight: bold;
        width: 45%; /* 버튼 너비 조정 */
    }

    .btn-primary {
        background-color: #3498db;
        color: #fff;
    }

    .btn-primary:hover {
        background-color: #2980b9;
    }

    .input-container {
        margin-bottom: 20px;
    }

    .button-container {
        display: flex;
        justify-content: space-between;
    }
</style>
